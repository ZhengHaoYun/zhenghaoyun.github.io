<!DOCTYPE html>
<html lang="zh-Hans">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    <meta name="keywords" content="博客,编程,代码,Java,空间,记录">
    <meta name="description" content="郑皓云的个人博客,博客,编程,代码,Java,空间,记录">
    <meta name="author" content="Hoven">
    
    <title>
        
            浅谈远程过程调用——RPC |
        
        好运的云
    </title>
    
<link rel="stylesheet" href="/css/style.css">

    <link rel="shortcut icon" href="/images/favicon.png">
    
<link rel="stylesheet" href="/css/font-awesome.min.css">

    <script id="hexo-configurations">
    let KEEP = window.KEEP || {};
    KEEP.hexo_config = {"hostname":"zhenghaoyun.cn","root":"/","language":"zh-Hans","path":"search.json"};
    KEEP.theme_config = {"toc":{"enable":true,"number":false,"expand_all":true,"init_open":true},"style":{"primary_color":"#0066CC","avatar":"/images/avatar.png","favicon":"/images/favicon.png","article_img_align":"center","left_side_width":"260px","content_max_width":"920px","hover":{"shadow":false,"scale":false},"first_screen":{"enable":true,"background_img":"/images/bg.svg","description":"Keep writing and Keep loving."},"scroll":{"progress_bar":{"enable":true},"percent":{"enable":false}}},"local_search":{"enable":true,"preload":true},"code_copy":{"enable":true,"style":"default"},"pjax":{"enable":false},"lazyload":{"enable":true},"version":"3.4.2"};
    KEEP.language_ago = {"second":"%s seconds ago","minute":"%s minutes ago","hour":"%s hours ago","day":"%s days ago","week":"%s weeks ago","month":"%s months ago","year":"%s years ago"};
  </script>
<meta name="generator" content="Hexo 5.4.0"></head>


<body>
<div class="progress-bar-container">
    
        <span class="scroll-progress-bar"></span>
    

    
</div>


<main class="page-container">

    

    <div class="page-main-content">

        <div class="page-main-content-top">
            <header class="header-wrapper">

    <div class="header-content">
        <div class="left">
            <a class="logo-title" href="/">
                好运的云
            </a>
        </div>

        <div class="right">
            <div class="pc">
                <ul class="menu-list">
                    
                        <li class="menu-item">
                            <a class=""
                               href="/"
                            >
                                首页
                            </a>
                        </li>
                    
                        <li class="menu-item">
                            <a class=""
                               href="/archives"
                            >
                                归档
                            </a>
                        </li>
                    
                        <li class="menu-item">
                            <a class=""
                               href="/categories"
                            >
                                分类
                            </a>
                        </li>
                    
                        <li class="menu-item">
                            <a class=""
                               href="/tags"
                            >
                                标签
                            </a>
                        </li>
                    
                        <li class="menu-item">
                            <a class=""
                               href="/about"
                            >
                                关于
                            </a>
                        </li>
                    
                    
                        <li class="menu-item search search-popup-trigger">
                            <i class="fas fa-search"></i>
                        </li>
                    
                </ul>
            </div>
            <div class="mobile">
                
                    <div class="icon-item search search-popup-trigger"><i class="fas fa-search"></i></div>
                
                <div class="icon-item menu-bar">
                    <div class="menu-bar-middle"></div>
                </div>
            </div>
        </div>
    </div>

    <div class="header-drawer">
        <ul class="drawer-menu-list">
            
                <li class="drawer-menu-item flex-center">
                    <a class=""
                       href="/">首页</a>
                </li>
            
                <li class="drawer-menu-item flex-center">
                    <a class=""
                       href="/archives">归档</a>
                </li>
            
                <li class="drawer-menu-item flex-center">
                    <a class=""
                       href="/categories">分类</a>
                </li>
            
                <li class="drawer-menu-item flex-center">
                    <a class=""
                       href="/tags">标签</a>
                </li>
            
                <li class="drawer-menu-item flex-center">
                    <a class=""
                       href="/about">关于</a>
                </li>
            
        </ul>
    </div>

    <div class="window-mask"></div>

</header>


        </div>

        <div class="page-main-content-middle">

            <div class="main-content">

                
                    <div class="fade-in-down-animation">
    <div class="article-content-container">

        <div class="article-title">
            <span class="title-hover-animation">浅谈远程过程调用——RPC</span>
        </div>

        
            <div class="article-header">
                <div class="avatar">
                    <img src="/images/avatar.png">
                </div>
                <div class="info">
                    <div class="author">
                        <span class="name">Hoven</span>
                        
                    </div>
                    <div class="meta-info">
                        <div class="article-meta-info">
    <span class="article-date article-meta-item">
        <i class="fas fa-edit"></i>&nbsp;2020-09-29 22:02:20
    </span>
    
        <span class="article-categories article-meta-item">
            <i class="fas fa-folder"></i>&nbsp;
            <ul>
                
                    <li>
                        <a href="/categories/%E5%88%86%E5%B8%83%E5%BC%8F/">分布式</a>&nbsp;
                    </li>
                
            </ul>
        </span>
    
    
        <span class="article-tags article-meta-item">
            <i class="fas fa-tags"></i>&nbsp;
            <ul>
                
                    <li>
                        <a href="/tags/RPC/">RPC</a>&nbsp;
                    </li>
                
            </ul>
        </span>
    

    
    
    
    
        <span class="article-pv article-meta-item">
            <i class="fas fa-eye"></i>&nbsp;<span id="busuanzi_value_page_pv"></span>
        </span>
    
</div>

                    </div>
                </div>
            </div>
        

        <div class="article-content markdown-body">
            <p>在复习SpringCloud的时候总是会遇到RPC这一词，但又不知道是何方神圣，上网冲浪了解了一下RPC，在此记录下对RPC的初步认识。</p>
<h1 id="1-什么是RPC"><a href="#1-什么是RPC" class="headerlink" title="1. 什么是RPC"></a>1. 什么是RPC</h1><h2 id="1-1-本地过程调用"><a href="#1-1-本地过程调用" class="headerlink" title="1.1 本地过程调用"></a>1.1 本地过程调用</h2><p>如果我们需要将本地的Student对象的age加1，那么就需要写一个Student addAge(Student student)方法，将student对象作为形参传入，将student的年龄进行+1，再返回student对象即可。这个过程我们称作<strong>本地过程调用</strong>。本地过程调用的函数体通过函数指针来指定。</p>
<h2 id="1-2-远程过程调用"><a href="#1-2-远程过程调用" class="headerlink" title="1.2 远程过程调用"></a>1.2 远程过程调用</h2><p>那么如果addAge()方法的方法体不在本地，而是在另外一台服务器上，该怎么办呢？</p>
<p>也就是说有两台机器，一台服务器A，一台服务器B，一个应用部署在服务器A上，想要调用服务器B上的应用提供的方法，但是因为不在同一个服务器上，不能直接调用，这个时候就需要通过网络来表达调用的语义和需要传达的数据。</p>
<p>这个过程称作<strong>远程过程调用</strong>，而RPC就是远程过程调用（Remote Procedure Call）的缩写形式。</p>
<h2 id="1-3-RPC概念总结"><a href="#1-3-RPC概念总结" class="headerlink" title="1.3 RPC概念总结"></a>1.3 RPC概念总结</h2><p>RPC即远程过程调用，通过RPC，我们可以像调用本地方法一样去调用远程机器上的方法。</p>
<h1 id="2-RPC所解决的问题"><a href="#2-RPC所解决的问题" class="headerlink" title="2. RPC所解决的问题"></a>2. RPC所解决的问题</h1><h2 id="2-1-需要调用什么方法？"><a href="#2-1-需要调用什么方法？" class="headerlink" title="2.1 需要调用什么方法？"></a>2.1 需要调用什么方法？</h2><h3 id="2-1-1-Call-ID映射"><a href="#2-1-1-Call-ID映射" class="headerlink" title="2.1.1 Call ID映射"></a>2.1.1 Call ID映射</h3><p>我们怎么让远程机器知道我们要调用的是什么方法呢？为什么是addAge()而不是addMoney()？</p>
<p>在本地调用中，我们通过函数指针去来指定对应的函数体，但是在远程调用中，函数指针是不可行的，因为我们所需要执行的函数体是在另外一台机器上的，也就是说addAge()是在另外一个进程中的，两个进程的内存空间是不一样的，所以函数指针不可行。</p>
<p>在RPC中，所有的函数/方法都会存在一个自己的Call ID，这个Call ID在每个进程中的都是唯一确定的，而且每个进程需要维护一个{函数体 ↔ Call ID}的对应表。不同进程的表可以不同，但对应的函数的Call ID必须相同，也就是说 ，<strong>同一个函数，同一个Call ID</strong>。</p>
<p>在远程调用的时候，当前进程进行查表，找出该函数对应的Call ID，然后把Call ID传递给远程机器，远程机器再通过查表，找出Call ID对应的函数，然后执行相应函数的函数体。</p>
<h2 id="2-2-参数值以什么形式传递？"><a href="#2-2-参数值以什么形式传递？" class="headerlink" title="2.2 参数值以什么形式传递？"></a>2.2 参数值以什么形式传递？</h2><h3 id="2-2-1-序列化和反序列化"><a href="#2-2-1-序列化和反序列化" class="headerlink" title="2.2.1 序列化和反序列化"></a>2.2.1 序列化和反序列化</h3><p>在上文中，我们提到了将Call ID传递给远程机器，而且大多数情况下我们还需要传递一些参数给远程机器，那么怎么传递呢？</p>
<p>在本地过程调用中，我们只需要将参数压入栈中，然后函数再将参数从栈中弹出来即可，但是远程调用的时候，不同的进程，不同的内存空间，是无法通过内存进行参数传递的，甚至可能两个进程使用的不是同一种语言（一个为Python、一个为Java）。</p>
<p>在PRC中，客户端会将参数序列化成一个字节流，传给服务端，服务端再将字节流反序列化为自己可以读取的格式，这个过程称作<strong>序列化</strong>和<strong>反序列化</strong>。</p>
<p>简而言之：<strong>客户端和服务端通过序列化和反序列化对参数进行处理</strong>。</p>
<h2 id="2-3-怎么传递参数值？"><a href="#2-3-怎么传递参数值？" class="headerlink" title="2.3 怎么传递参数值？"></a>2.3 怎么传递参数值？</h2><h3 id="2-3-1-网络"><a href="#2-3-1-网络" class="headerlink" title="2.3.1 网络"></a>2.3.1 网络</h3><p>将参数值进行序列化后怎么传递给远程机器呢？</p>
<p>远程调用往往用在网络上，客户端与服务端通过网络进行连接，所有的数据经过序列化成字节流后，通过网络传递给服务端。</p>
<p><strong>所有的数据通过网络进行传递</strong>，因此就需要一个网络传输层，网络传输层需要把 Call ID 和序列化后的参数字节流传给服务端，然后再把序列化后的调用结果传回客户端。</p>
<p>只要能完成这两者的，都可以作为传输层使用。因此，它所使用的协议其实是不限的，能完成传输就行。</p>
<p>尽管大部分 RPC 框架都使用 TCP 协议，但其实 UDP 也可以，而 gRPC 干脆就用了 HTTP2。</p>
<p>TCP的连接是最常见的，大部分都通过TCP进行连接，简要分析下TCP连接：TCP连接可以是按需连接的（即需要调用的时候就先建立连接，调用结束后就立马断掉），也可以是长连接的（即维持连接的状态不变，不管是否有数据报的发送，可以配合心跳检测判定连接是否存活），多个远程过程调用共享同一个连接。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://zhenghaoyun.oss-cn-beijing.aliyuncs.com/img/20200929201826.png"
                      alt="image-20200929201826064"
                ></p>
<h1 id="3-网络传输协议"><a href="#3-网络传输协议" class="headerlink" title="3.网络传输协议"></a>3.网络传输协议</h1><p>上文说明了要实现一个 RPC，需要选择网络传输的方式。</p>
<p>在 RPC 中可选的网络传输方式有多种，可以选择 TCP 协议、UDP 协议、HTTP 协议。</p>
<p>每一种协议对整体的性能和效率都有不同的影响，我们需要选择一个正确的网络传输协议。</p>
<h2 id="3-1-基于-TCP-协议的-RPC-调用"><a href="#3-1-基于-TCP-协议的-RPC-调用" class="headerlink" title="3.1 基于 TCP 协议的 RPC 调用"></a>3.1 基于 TCP 协议的 RPC 调用</h2><p>由服务的调用方与服务的提供方建立Socket连接，并且由服务的调用方通过Socket将调用的接口名称、参数、方法名称序列化后传递给服务的提供方，服务的提供方反序列化后利用反射去调用相关的方法。</p>
<p>将结果返回给服务的调用方，整个基于 TCP 协议的 RPC 调用大致如此。</p>
<p>但是在实例应用中则会进行一系列的封装，如 RMI 便是在 TCP 协议上传递可序列化的 Java 对象。</p>
<h2 id="3-2-基于HTTP协议的RPC调用"><a href="#3-2-基于HTTP协议的RPC调用" class="headerlink" title="3.2 基于HTTP协议的RPC调用"></a>3.2 基于HTTP协议的RPC调用</h2><p>该方法更像是访问网页一样，只是它的返回结果更加单一简单。</p>
<p>其大致流程为：由服务的调用者向服务的提供者发送请求，这种请求的方式可能是 GET、POST、PUT、DELETE 等中的一种，服务的提供者可能会根据不同的请求方式做出不同的处理，或者某个方法只允许某种请求方式。</p>
<p>而调用的具体方法则是根据 URL 进行方法调用，而方法所需要的参数可能是对服务调用方传输过去的 <strong>XML 数据</strong>或者 <strong>JSON 数据</strong>解析后的结果，返回 JOSN 或者 XML 的数据结果。</p>
<p>由于目前有很多开源的 Web 服务器，如 Tomcat，所以其实现起来更加容易，就像做 Web 项目一样。</p>
<h2 id="3-2-两种方式的对比"><a href="#3-2-两种方式的对比" class="headerlink" title="3.2 两种方式的对比"></a>3.2 两种方式的对比</h2><p>基于 TCP 的协议实现的 RPC 调用，由于 TCP 协议处于协议栈的下层，能够更加灵活地对协议字段进行定制，减少网络开销，提高性能，实现更大的吞吐量和并发数。（其实这一段我不太理解，源于我脆弱的计算机网络基础）</p>
<p>但是需要更多关注底层复杂的细节，实现的代价更高。同时对不同平台，如安卓，iOS 等，需要重新开发出不同的工具包来进行请求发送和相应解析，工作量大，难以快速响应和满足用户需求。</p>
<p>基于 HTTP 协议实现的 RPC 则可以使用 JSON 和 XML 格式的请求或响应数据。</p>
<p>而 JSON 和 XML 作为通用的格式标准(使用 HTTP 协议也需要序列化和反序列化，不过这不是该协议下关心的内容，成熟的 Web 程序已经做好了序列化内容)，开源的解析工具已经相当成熟，在其上进行二次开发会非常便捷和简单。</p>
<p>但是由于 HTTP 协议是上层协议，发送包含同等内容的信息，使用 HTTP 协议传输所占用的字节数会比使用 TCP 协议传输所占用的字节数更高。</p>
<p>因此在同等网络下，通过 HTTP 协议传输相同内容，效率会比基于 TCP 协议的数据效率要低，信息传输所占用的时间也会更长，当然压缩数据，能够缩小这一差距。</p>

        </div>

        
            <div class="post-copyright-info">
                <div class="article-copyright-info-container">
    <ul>
        <li>Post title：浅谈远程过程调用——RPC</li>
        <li>Post author：Hoven</li>
        <li>Create time：2020-09-29 22:02:20</li>
        <li>
            Post link：https://zhenghaoyun.cn/分布式/浅谈远程过程调用——RPC
        </li>
        <li>
            Copyright Notice：All articles in this blog are licensed under <a class="license" target="_blank" rel="noopener" href="https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh">BY-NC-SA</a> unless stating additionally.
        </li>
    </ul>
</div>

            </div>
        

        
            <div class="article-nav">
                
                    <div class="article-prev">
                        <a class="prev"
                           rel="prev"
                           href="/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E5%85%B3%E4%BA%8E%E6%88%91%E5%AF%B9Socket%E7%9A%84%E6%9A%82%E6%97%B6%E7%90%86%E8%A7%A3"
                        >
                            <span class="left arrow-icon flex-center">
                              <i class="fas fa-chevron-left"></i>
                            </span>
                            <span class="title flex-center">
                                <span class="post-nav-title-item">关于我对Socket的暂时理解</span>
                                <span class="post-nav-item">Prev posts</span>
                            </span>
                        </a>
                    </div>
                
                
                    <div class="article-next">
                        <a class="next"
                           rel="next"
                           href="/MySQL/MySQL%E9%AB%98%E7%BA%A7%E7%AF%87%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89%E9%94%81%E6%9C%BA%E5%88%B6"
                        >
                            <span class="title flex-center">
                                <span class="post-nav-title-item">MySQL高级篇笔记（四）锁机制</span>
                                <span class="post-nav-item">Next posts</span>
                            </span>
                            <span class="right arrow-icon flex-center">
                              <i class="fas fa-chevron-right"></i>
                            </span>
                        </a>
                    </div>
                
            </div>
        

        
            <div class="comment-container">
                <div class="comments-container">
    <div id="comment-anchor"></div>
    <div class="comment-area-title">
        <i class="fas fa-comments">&nbsp;Comments</i>
    </div>
    

        
            
    <div class="valine-container">
        <script 
                src="//cdn.jsdelivr.net/npm/valine@latest/dist/Valine.min.js"></script>
        <div id="vcomments"></div>
        <script >
            function loadValine() {
                new Valine({
                    el: '#vcomments',
                    appId: 'uffz9vWTIQhDc1YbAjAndspC-gzGzoHsz',
                    appKey: 'KQwbThRfP3cQIJYoLHMIqXLX',
                    meta: ['nick', 'mail', 'link'],
                    avatar: 'wavatar',
                    enableQQ: true,
                    placeholder: '',
                    lang: 'zh-Hans'.toLowerCase()
                });

                function getAuthor(language) {
                    switch (language) {
                        case 'en':
                            return 'Author';
                        case 'zh-CN':
                            return '博主';
                        default:
                            return 'Master';
                    }
                }

                // Add "Author" identify
                const getValineDomTimer = setInterval(() => {
                    const vcards = document.querySelectorAll('#vcomments .vcards .vcard');
                    if (vcards.length > 0) {
                        let author = 'Hoven';

                        if (author) {
                            for (let vcard of vcards) {
                                const vnick_dom = vcard.querySelector('.vhead .vnick');
                                const vnick = vnick_dom.innerHTML;
                                if (vnick === author) {
                                    vnick_dom.innerHTML = `${vnick} <span class="author">${getAuthor(KEEP.hexo_config.language)}</span>`
                                }
                            }
                        }
                        clearInterval(getValineDomTimer);
                    } else {
                        clearInterval(getValineDomTimer);
                    }
                }, 2000);
            }

            if ('false') {
                const loadValineTimeout = setTimeout(() => {
                    loadValine();
                    clearTimeout(loadValineTimeout);
                }, 1000);
            } else {
                window.addEventListener('DOMContentLoaded', loadValine);
            }
        </script>
    </div>



        
    
</div>

            </div>
        
    </div>
</div>


                
            </div>

        </div>

        <div class="page-main-content-bottom">
            <footer class="footer">
    <div class="info-container">
        <div class="copyright-info info-item">
            &copy;
            
              <span>2019</span>&nbsp;-&nbsp;
            
            2021&nbsp;<i class="fas fa-heart icon-animate"></i>&nbsp;<a href="/">Hoven</a>
        </div>
        
            <script async  src="//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js"></script>
            <div class="website-count info-item">
                
                    <span id="busuanzi_container_site_uv">
                        Visitor Count&nbsp;<span id="busuanzi_value_site_uv"></span>&ensp;
                    </span>
                
                
                    <span id="busuanzi_container_site_pv">
                        Totalview&nbsp;<span id="busuanzi_value_site_pv"></span>
                    </span>
                
            </div>
        
        <div class="theme-info info-item">
            Powered by <a target="_blank" href="https://hexo.io">Hexo</a>&nbsp;|&nbsp;Theme&nbsp;<a class="theme-version" target="_blank" href="https://github.com/XPoet/hexo-theme-keep">Keep v3.4.2</a>
        </div>
        
    </div>
</footer>

        </div>
    </div>

    
        <div class="post-tools">
            <div class="post-tools-container">
    <ul class="tools-list">
        <!-- TOC aside toggle -->
        
            <li class="tools-item page-aside-toggle">
                <i class="fas fa-outdent"></i>
            </li>
        

        <!-- go comment -->
        
            <li class="go-comment">
                <i class="fas fa-comment"></i>
            </li>
        
    </ul>
</div>

        </div>
    

    <div class="right-bottom-side-tools">
        <div class="side-tools-container">
    <ul class="side-tools-list">
        <li class="tools-item tool-font-adjust-plus flex-center">
            <i class="fas fa-search-plus"></i>
        </li>

        <li class="tools-item tool-font-adjust-minus flex-center">
            <i class="fas fa-search-minus"></i>
        </li>

        <li class="tools-item tool-expand-width flex-center">
            <i class="fas fa-arrows-alt-h"></i>
        </li>

        <li class="tools-item tool-dark-light-toggle flex-center">
            <i class="fas fa-moon"></i>
        </li>

        <!-- rss -->
        

        
            <li class="tools-item tool-scroll-to-top flex-center">
                <i class="fas fa-arrow-up"></i>
            </li>
        

        <li class="tools-item tool-scroll-to-bottom flex-center">
            <i class="fas fa-arrow-down"></i>
        </li>
    </ul>

    <ul class="exposed-tools-list">
        <li class="tools-item tool-toggle-show flex-center">
            <i class="fas fa-cog fa-spin"></i>
        </li>
        
    </ul>
</div>

    </div>

    
        <aside class="page-aside">
            <div class="post-toc-wrap">
    <div class="post-toc">
        <ol class="nav"><li class="nav-item nav-level-1"><a class="nav-link" href="#1-%E4%BB%80%E4%B9%88%E6%98%AFRPC"><span class="nav-text">1. 什么是RPC</span></a><ol class="nav-child"><li class="nav-item nav-level-2"><a class="nav-link" href="#1-1-%E6%9C%AC%E5%9C%B0%E8%BF%87%E7%A8%8B%E8%B0%83%E7%94%A8"><span class="nav-text">1.1 本地过程调用</span></a></li><li class="nav-item nav-level-2"><a class="nav-link" href="#1-2-%E8%BF%9C%E7%A8%8B%E8%BF%87%E7%A8%8B%E8%B0%83%E7%94%A8"><span class="nav-text">1.2 远程过程调用</span></a></li><li class="nav-item nav-level-2"><a class="nav-link" href="#1-3-RPC%E6%A6%82%E5%BF%B5%E6%80%BB%E7%BB%93"><span class="nav-text">1.3 RPC概念总结</span></a></li></ol></li><li class="nav-item nav-level-1"><a class="nav-link" href="#2-RPC%E6%89%80%E8%A7%A3%E5%86%B3%E7%9A%84%E9%97%AE%E9%A2%98"><span class="nav-text">2. RPC所解决的问题</span></a><ol class="nav-child"><li class="nav-item nav-level-2"><a class="nav-link" href="#2-1-%E9%9C%80%E8%A6%81%E8%B0%83%E7%94%A8%E4%BB%80%E4%B9%88%E6%96%B9%E6%B3%95%EF%BC%9F"><span class="nav-text">2.1 需要调用什么方法？</span></a><ol class="nav-child"><li class="nav-item nav-level-3"><a class="nav-link" href="#2-1-1-Call-ID%E6%98%A0%E5%B0%84"><span class="nav-text">2.1.1 Call ID映射</span></a></li></ol></li><li class="nav-item nav-level-2"><a class="nav-link" href="#2-2-%E5%8F%82%E6%95%B0%E5%80%BC%E4%BB%A5%E4%BB%80%E4%B9%88%E5%BD%A2%E5%BC%8F%E4%BC%A0%E9%80%92%EF%BC%9F"><span class="nav-text">2.2 参数值以什么形式传递？</span></a><ol class="nav-child"><li class="nav-item nav-level-3"><a class="nav-link" href="#2-2-1-%E5%BA%8F%E5%88%97%E5%8C%96%E5%92%8C%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96"><span class="nav-text">2.2.1 序列化和反序列化</span></a></li></ol></li><li class="nav-item nav-level-2"><a class="nav-link" href="#2-3-%E6%80%8E%E4%B9%88%E4%BC%A0%E9%80%92%E5%8F%82%E6%95%B0%E5%80%BC%EF%BC%9F"><span class="nav-text">2.3 怎么传递参数值？</span></a><ol class="nav-child"><li class="nav-item nav-level-3"><a class="nav-link" href="#2-3-1-%E7%BD%91%E7%BB%9C"><span class="nav-text">2.3.1 网络</span></a></li></ol></li></ol></li><li class="nav-item nav-level-1"><a class="nav-link" href="#3-%E7%BD%91%E7%BB%9C%E4%BC%A0%E8%BE%93%E5%8D%8F%E8%AE%AE"><span class="nav-text">3.网络传输协议</span></a><ol class="nav-child"><li class="nav-item nav-level-2"><a class="nav-link" href="#3-1-%E5%9F%BA%E4%BA%8E-TCP-%E5%8D%8F%E8%AE%AE%E7%9A%84-RPC-%E8%B0%83%E7%94%A8"><span class="nav-text">3.1 基于 TCP 协议的 RPC 调用</span></a></li><li class="nav-item nav-level-2"><a class="nav-link" href="#3-2-%E5%9F%BA%E4%BA%8EHTTP%E5%8D%8F%E8%AE%AE%E7%9A%84RPC%E8%B0%83%E7%94%A8"><span class="nav-text">3.2 基于HTTP协议的RPC调用</span></a></li><li class="nav-item nav-level-2"><a class="nav-link" href="#3-2-%E4%B8%A4%E7%A7%8D%E6%96%B9%E5%BC%8F%E7%9A%84%E5%AF%B9%E6%AF%94"><span class="nav-text">3.2 两种方式的对比</span></a></li></ol></li></ol>
    </div>
</div>
        </aside>
    

    <div class="image-viewer-container">
    <img src="">
</div>


    
        <div class="search-pop-overlay">
    <div class="popup search-popup">
        <div class="search-header">
          <span class="search-input-field-pre">
            <i class="fas fa-keyboard"></i>
          </span>
            <div class="search-input-container">
                <input autocomplete="off"
                       autocorrect="off"
                       autocapitalize="off"
                       placeholder="Search..."
                       spellcheck="false"
                       type="search"
                       class="search-input"
                >
            </div>
            <span class="popup-btn-close">
                <i class="fas fa-times"></i>
            </span>
        </div>
        <div id="search-result">
            <div id="no-result">
                <i class="fas fa-spinner fa-pulse fa-5x fa-fw"></i>
            </div>
        </div>
    </div>
</div>

    

</main>




<script src="/js/utils.js"></script>

<script src="/js/main.js"></script>

<script src="/js/header-shrink.js"></script>

<script src="/js/back2top.js"></script>

<script src="/js/dark-light-toggle.js"></script>



    
<script src="/js/local-search.js"></script>




    
<script src="/js/code-copy.js"></script>




    
<script src="/js/lazyload.js"></script>



<div class="post-scripts">
    
        
<script src="/js/left-side-toggle.js"></script>

<script src="/js/libs/anime.min.js"></script>

<script src="/js/toc.js"></script>

    
</div>



</body>
</html>
